// http://ionicframework.com/docs/v2/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
@mixin androidTheme($theme) {
  ion-alert {
    .alert-input:focus {
      border-bottom: 2px solid $theme;
    }
    .alert-button {
      color: $theme;
    }
    .alert-radio {
      .alert-radio-icon {
        border-color: $theme;
        .alert-radio-inner {
          background-color: $theme;
        }
      }
      .alert-radio-label {
        color: $theme;
      }
    }
  }
  .item-input.input-has-focus {
    .item-inner {
      border-bottom-color: $theme;
      box-shadow: inset 0px -1px 0 0 $theme;
      .label-md[floating] {
        color: $theme !important;
      }
    }
  }
}

@mixin iosTheme($theme) {}

@mixin wpTheme($theme) {}

@mixin applyTheme($theme) {
  .platform-android {
    @include androidTheme($theme);
  }
  .platform-ios {
    @include iosTheme($theme);
  }
  .platform-wp {
    @include wpTheme($theme);
  }
}

body[theme="md-green"] {
  @include applyTheme(color($colors, md-green));
}

body[theme="md-blue"] {
  @include applyTheme(color($colors, md-blue));
}

body[theme="md-red"] {
  @include applyTheme(color($colors, md-red));
}

body[theme="md-purple"] {
  @include applyTheme(color($colors, md-purple));
}

body[theme="md-grey"] {
  @include applyTheme(color($colors, md-grey));
}

@mixin grid($vertical: center, $horizontal: center, $wrap: wrap) {
  display: flex;
  align-items: $vertical;
  justify-content: $horizontal;
  flex-wrap: $wrap;
}

.toast-success .toast-message {
  color: #388E3C;
}

.toast-error .toast-message {
  color: #f44336;
}
